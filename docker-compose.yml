version: '3.8'

services:
  api:
    container_name: api
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - '127.0.0.1:5000:5000'
    volumes:
      - ./session-keys:/app/session-keys:ro
      - /tmp:/tmp:ro
    read_only: true
    networks:
      - backend
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:5000/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    logging:
      driver: 'json-file'
      options:
        max-size: '10m'
        max-file: '3'

  dozzle:
    container_name: dozzle
    image: amir20/dozzle:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - '127.0.0.1:8080:8080:ro'
    security_opt:
      - no-new-privileges:true
    networks:
      - monitoring
    labels:
      - 'traefik.enable=false'
    deploy:
      resources:
        limits:
          memory: 256M

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.retention.time=15d'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - '127.0.0.1:9090:9090'
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    user: nobody
    networks:
      - monitoring
    volumes:
      - ./prometheus:/etc/prometheus:ro
      - prom_data:/prometheus
    deploy:
      resources:
        limits:
          cpus: 2
          memory: 2G
    labels:
      - 'traefik.enable=false'

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - '127.0.0.1:6000:6000'
    restart: unless-stopped
    user: grafana
    networks:
      - monitoring
    security_opt:
      - no-new-privileges:true
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_INSTALL_PLUGINS=grafana-clock-panel, grafana-simple-json-datasource
      - GF_SERVER_ROOT_URL=${GRAFANA_ROOT_URL:-http://loclahost:6000}
      - GF_SECURITY_ALLOW_EMBEDDING=${GRAFANA_ALLOW_EMBEDDING:-false}
      - GF_AUTH_ANONYMOUS_ENABLED=${GRAFANA_ANON_ACCESS:-false}
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
      - grafana-storage:/var/lib/grafana
    deploy:
      resources:
        limits:
          memory: 1G

networks:
  backend:
    driver: overlay
    internal: true
  monitoring:
    driver: overlay

volumes:
  prom_data:
    driver: local
  grafana-storage:
    driver: local
